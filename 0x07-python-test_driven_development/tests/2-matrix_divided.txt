TEST CASES FOR matrix_divided MODULE
====================================

Using "matrix_divided"
----------------------

Importing the function matrix_divided:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test Case 1: Dividing a matrix of integers by an integer
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test Case 2: Dividing a matrix of floats by an integer
	>>> matrix = [[1.0, 2.00, 3.00], [4.0, 5.00, 6.0001]]
	>>> matrix_divided(matrix, 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test Case 3: Dividing a matrix of floats and integers by a float
	>>> matrix = [[1.0, 2, 3.00], [4, 5.00, 6]]
        >>> matrix_divided(matrix, 2.56)
        [[0.39, 0.78, 1.17], [1.56, 1.95, 2.34]]

Test Case 4: Dividing by 0
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Test Case 5: Dividing by a string
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, "school")
        Traceback (most recent call last):
		...
	TypeError: div must be a number

Test Case 6: Dividing by a list or tuple
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, [1, 2, 3.4, "school"])
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

Test Case 7: Dividing a matrix of numbers and strings
	>>> matrix = [[1, 2, 's'], ['d', '5op', 6]]
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Test Case 8: A matrix with unequal length of rows
	>>> matrix = [[1, 2, 3], [4, 5, 6], [1, 2, 3, 4, 5, 6, 7]]
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
                ...
        TypeError: Each row of the matrix must have the same size

Test Case 9: Dividin with None
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, [1, 2, 3.4, None])
        Traceback (most recent call last):
                ...
        TypeError: div must be a number
